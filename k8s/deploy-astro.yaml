---
apiVersion: v1
kind: Service
metadata:
  name: astro
  labels:
    app.kubernetes.io/name: astro
    app.kubernetes.io/instance: astro
    app.kubernetes.io/version: "0.0.1"
spec:
  type: NodePort
  ports:
    - port: 3000
      name: astro-port
  selector:
    app.kubernetes.io/name: astro
    app.kubernetes.io/instance: astro
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: astro
  labels:
    app.kubernetes.io/name: astro
    app.kubernetes.io/instance: astro
    app.kubernetes.io/version: "0.0.1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: astro
      app.kubernetes.io/instance: astro
  template:
    metadata:
      labels:
        app.kubernetes.io/name: astro
        app.kubernetes.io/instance: astro
    spec:
      # securityContext:
      #   runAsUser: 0
      containers:
        - name: astro
          image: "astro:skf"
          imagePullPolicy: Never
          ports:
          - containerPort: 3000
          env:
          -  name: RABBIT_MQ_CONN_STRING
             valueFrom:
               configMapKeyRef:
                 name: rabbitmq
                 key: RABBIT_MQ_CONN_STRING
          -  name: RABBITMQ_DEFAULT_USER
             valueFrom:
               configMapKeyRef:
                 name: rabbitmq
                 key: RABBITMQ_DEFAULT_USER
          -  name: RABBITMQ_DEFAULT_PASS
             valueFrom:
               configMapKeyRef:
                 name: rabbitmq
                 key: RABBITMQ_DEFAULT_PASS
          -  name: SKF_LABS_DOMAIN
             valueFrom:
               configMapKeyRef:
                 name: workers
                 key: SKF_LABS_DOMAIN
          -  name: SKF_LABS_DEPLOY_MODE
             valueFrom:
               configMapKeyRef:
                 name: workers
                 key: SKF_LABS_DEPLOY_MODE
          -  name: PUBLIC_SUPABASE_API_KEY
             valueFrom:
               configMapKeyRef:
                 name: astro
                 key: PUBLIC_SUPABASE_API_KEY
---
